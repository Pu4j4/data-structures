What is Recursion?Â 
The process in which a function calls itself directly or indirectly is called recursion and the corresponding function is called a recursive function. 
Using a recursive algorithm, certain problems can be solved quite easily.
A recursive function solves a particular problem by calling a copy of itself and solving smaller subproblems of the original problems. 
Many more recursive calls can be generated as and when required. 
It is essential to know that we should provide a certain case in order to terminate this recursion process. 
So we can say that every time the function calls itself with a simpler version of the original problem.

Need of Recursion:

Recursion is an amazing technique with the help of which we can reduce the length of our code and make it easier to read and write. 
It has certain advantages over the iteration technique which will be discussed later. 
A task that can be defined with its similar subtask, recursion is one of the best solutions for it. For example; The Factorial of a number.

Properties of Recursion:

  - Performing the same operations multiple times with different inputs.
  - In every step, we try smaller inputs to make the problem smaller.
  - Base condition is needed to stop the recursion otherwise infinite loop will occur.

